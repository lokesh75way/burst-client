name: Run Maestro Tests (iOS)

on:
  push:
    branches:
      - testCase
  pull_request:
    branches:
      - main

jobs:
  maestro-tests:
    runs-on: macos-latest  # Use macOS for iOS Simulator
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java (Required for Maestro)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Verify Java Installation
        run: java -version

      - name: Install Maestro
        run: |
          brew install mobile-dev-inc/tap/maestro
          echo 'export PATH="$HOME/.maestro/bin:$PATH"' >> $HOME/.zshrc
          echo 'export PATH="$HOME/.maestro/bin:$PATH"' >> $HOME/.bashrc
          source ~/.zshrc || source ~/.bashrc

      - name: Verify Maestro Installation
        run: |
          export PATH="$HOME/.maestro/bin:$PATH"
          which maestro || echo "‚ö†Ô∏è Maestro is not found in PATH!"
          maestro --version

      - name: Start iOS Simulator
        run: |
          # Boot the specific simulator using its UUID
          xcrun simctl boot 149D7A01-C064-4FA1-BB4C-A632D9763B1B || echo "Simulator already booted"
          
          # Verify the simulator is booted
          echo "üì± Simulator Status:"
          xcrun simctl list devices

      - name: Debug Maestro Test Files
        run: |
          echo "üìÇ Contents of e2e directory:"
          ls -la e2e || echo "‚ö†Ô∏è e2e directory not found!"

      - name: Run All Maestro E2E Tests
        run: |
          export PATH="$HOME/.maestro/bin:$PATH"
          for test in e2e/*.yaml; do
            TEST_NAME=$(basename "$test" .yaml)
            OUTPUT_FILE="e2e/results-${TEST_NAME}.xml"
            
            echo "üî• Running test: $test"
            maestro test "$test" --format junit --output "$OUTPUT_FILE"

            if [ $? -ne 0 ]; then
              echo "‚ùå Test failed: $test"
              if [ -f "$OUTPUT_FILE" ]; then
                cat "$OUTPUT_FILE"
              else
                echo "‚ö†Ô∏è No test result file generated for $test"
              fi
              exit 1
            fi
          done

      # - name: Upload Test Results
      #   if: always()  # Upload results even if tests fail
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: maestro-test-results
      #     path: e2e/*.xml