name: Run Maestro Tests (iOS)

on:
  push:
    branches:
      - testCase
  pull_request:
    branches:
      - main

jobs:
  maestro-tests:
    runs-on: macos-latest  # Use macOS for iOS Simulator
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java (Required for Maestro)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Verify Java Installation
        run: java -version

      - name: Install Maestro
        run: |
          brew install mobile-dev-inc/tap/maestro
          echo 'export PATH="$HOME/.maestro/bin:$PATH"' >> $HOME/.zshrc
          echo 'export PATH="$HOME/.maestro/bin:$PATH"' >> $HOME/.bashrc
          source ~/.zshrc || source ~/.bashrc

      - name: Verify Maestro Installation
        run: |
          export PATH="$HOME/.maestro/bin:$PATH"
          which maestro || echo "‚ö†Ô∏è Maestro is not found in PATH!"
          maestro --version

      - name: Start iOS Simulator
        run: |
          UDID="149D7A01-C064-4FA1-BB4C-A632D9763B1B"

          echo "üì± Booting Simulator..."
          xcrun simctl boot $UDID || echo "Simulator already booted"

          echo "‚è≥ Waiting for simulator to be ready..."
          xcrun simctl bootstatus $UDID -b || echo "Simulator is already booted"
          
          echo "‚úÖ Simulator is ready!"
          xcrun simctl list devices

      # - name: Restart WebDriverAgent
      #   run: |
      #     echo "üîÑ Restarting WebDriverAgent..."
      #     pkill -9 xcodebuild || echo "No running WDA found"
      #     xcrun simctl shutdown all
      #     sleep 5
      #     xcrun simctl boot $UDID
      #     xcrun simctl bootstatus $UDID --wait
      #     echo "‚úÖ WebDriverAgent restarted!"

      - name: Debug iOS & Maestro Setup
        run: |
          echo "üîç Checking Xcode installation..."
          xcode-select -p || echo "‚ùå Xcode CLI tools not found!"

         
          echo "üîç Checking Maestro installation..."
          which maestro || echo "‚ùå Maestro not found!"
          maestro --version

      - name: Run All Maestro E2E Tests
        run: |
          export PATH="$HOME/.maestro/bin:$PATH"
          export MAESTRO_DRIVER_STARTUP_TIMEOUT=120000  # 120 seconds
          for test in e2e/*.yaml; do
            TEST_NAME=$(basename "$test" .yaml)
            OUTPUT_FILE="e2e/results-${TEST_NAME}.xml"
            
            echo "üî• Running test: $test"
            maestro test "$test" --format junit --output "$OUTPUT_FILE"

            if [ $? -ne 0 ]; then
              echo "‚ùå Test failed: $test"
              if [ -f "$OUTPUT_FILE" ]; then
                cat "$OUTPUT_FILE"
              else
                echo "‚ö†Ô∏è No test result file generated for $test"
              fi
              exit 1
            fi
          done

      # - name: Run Single Maestro E2E Test (login.yaml)
      #   run: |
      #     export PATH="$HOME/.maestro/bin:$PATH"
      #     export MAESTRO_DRIVER_STARTUP_TIMEOUT=120000  # 5 minutes

      #     TEST_FILE="e2e/login.yaml"
      #     OUTPUT_FILE="e2e/results-login.xml"

      #     if [ -f "$TEST_FILE" ]; then
      #       echo "üî• Running test: $TEST_FILE"
      #       maestro test "$TEST_FILE" --format junit --output "$OUTPUT_FILE"

      #       if [ $? -ne 0 ]; then
      #         echo "‚ùå Test failed: $TEST_FILE"
      #         if [ -f "$OUTPUT_FILE" ]; then
      #           cat "$OUTPUT_FILE"
      #         else
      #           echo "‚ö†Ô∏è No test result file generated for $TEST_FILE"
      #         fi
      #         exit 1
      #       fi
      #     else
      #       echo "‚ö†Ô∏è Test file not found: $TEST_FILE"
      #       exit 1
      #     fi

      # - name: Upload Test Results (Optional)
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: maestro-test-results
      #     path: e2e/*.xml
